spring:
  application:
    name: gateway # gateway service name to be called by it clients
  profiles:
    active: operation
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
      globalcors:
        corsConfigurations:
          '[/**]':
            allowed-origins: "http://localhost:3000,http://localhost:3001,http://172.24.66.76:8082,http://172.24.66.76:8086,http://91.107.191.99:3000,http://91.107.191.99:3001"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
      discovery:
        locator:
          enabled: true # use netflix eureka discovery service
          #lower-case-service-id: true # debug in camelCase service name
      routes:
        - id: authentication
          uri: lb://authentication # netflix eureka correspondent service
          predicates:
            - Path=/authentication/** # how we will map the url to the target service
        #----------------------------------------
        - id: eventmanagment
          uri: lb://eventmanagment # netflix eureka correspondent service
          predicates:
            - Path=/eventmanagment/** # how we will map the url to the target service
        #----------------------------------------
        - id: shop
          uri: lb://shop # netflix eureka correspondent service
          predicates:
            - Path=/shop/** # how we will map the url to the target service
  #cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
  #spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,OPTIONS
  #spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true
management:
  tracing:
    sampling:
      probability: 1.0

#------- general eureka
eureka:
  instance:
    prefer-ip-address: true # registers the service ip rather than the server name
  client:
    register-with-eureka: true # register him self at eureka
    fetch-registry: true # pull down a local copy of the registries
    service-url:
      defaultZone: http://localhost:8766/eureka # discovery service location


gateway-config:
  logRequest: true
  checkRequestHeader: true
  removeDeniedHeaders: true
  logResponse: true
  allowHeaders:
    - Accept
    - Accept-Encoding
    - Accept-Language
    - Cache-Control
    - Connection
    - Content-Length
    - Content-Type
    - device
    - Host
    - Origin
    - Referer
    - Authorization

